
package client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProiectWebService", targetNamespace = "http://webPackage/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProiectWebService {


    /**
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://webPackage/", className = "client.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://webPackage/", className = "client.RegisterResponse")
    @Action(input = "http://webPackage/ProiectWebService/registerRequest", output = "http://webPackage/ProiectWebService/registerResponse")
    public String register(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "select", targetNamespace = "http://webPackage/", className = "client.Select")
    @ResponseWrapper(localName = "selectResponse", targetNamespace = "http://webPackage/", className = "client.SelectResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectRequest", output = "http://webPackage/ProiectWebService/selectResponse")
    public String select();

    /**
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webPackage/", className = "client.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webPackage/", className = "client.LoginResponse")
    @Action(input = "http://webPackage/ProiectWebService/loginRequest", output = "http://webPackage/ProiectWebService/loginResponse")
    public String login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param prenumeClient
     * @param orasDestinatar
     * @param judetClient
     * @param judetDestinatar
     * @param scaraDestinatar
     * @param stare
     * @param continut
     * @param prenumeDestinatar
     * @param blocClient
     * @param numarClient
     * @param telefon
     * @param scaraClient
     * @param blocDestinatar
     * @param stradaDestinatar
     * @param orasClient
     * @param numeDestinatar
     * @param apartamentDestinatar
     * @param email
     * @param numeClient
     * @param stradaClient
     * @param volum
     * @param prioritate
     * @param numarDestinatar
     * @param apartamentClient
     */
    @WebMethod
    @RequestWrapper(localName = "adaugareComanda", targetNamespace = "http://webPackage/", className = "client.AdaugareComanda")
    @ResponseWrapper(localName = "adaugareComandaResponse", targetNamespace = "http://webPackage/", className = "client.AdaugareComandaResponse")
    @Action(input = "http://webPackage/ProiectWebService/adaugareComandaRequest", output = "http://webPackage/ProiectWebService/adaugareComandaResponse")
    public void adaugareComanda(
        @WebParam(name = "numeClient", targetNamespace = "")
        String numeClient,
        @WebParam(name = "prenumeClient", targetNamespace = "")
        String prenumeClient,
        @WebParam(name = "stradaClient", targetNamespace = "")
        String stradaClient,
        @WebParam(name = "numarClient", targetNamespace = "")
        String numarClient,
        @WebParam(name = "blocClient", targetNamespace = "")
        String blocClient,
        @WebParam(name = "scaraClient", targetNamespace = "")
        String scaraClient,
        @WebParam(name = "apartamentClient", targetNamespace = "")
        String apartamentClient,
        @WebParam(name = "orasClient", targetNamespace = "")
        String orasClient,
        @WebParam(name = "judetClient", targetNamespace = "")
        String judetClient,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "telefon", targetNamespace = "")
        String telefon,
        @WebParam(name = "numeDestinatar", targetNamespace = "")
        String numeDestinatar,
        @WebParam(name = "prenumeDestinatar", targetNamespace = "")
        String prenumeDestinatar,
        @WebParam(name = "stradaDestinatar", targetNamespace = "")
        String stradaDestinatar,
        @WebParam(name = "numarDestinatar", targetNamespace = "")
        String numarDestinatar,
        @WebParam(name = "blocDestinatar", targetNamespace = "")
        String blocDestinatar,
        @WebParam(name = "scaraDestinatar", targetNamespace = "")
        String scaraDestinatar,
        @WebParam(name = "apartamentDestinatar", targetNamespace = "")
        String apartamentDestinatar,
        @WebParam(name = "orasDestinatar", targetNamespace = "")
        String orasDestinatar,
        @WebParam(name = "judetDestinatar", targetNamespace = "")
        String judetDestinatar,
        @WebParam(name = "continut", targetNamespace = "")
        String continut,
        @WebParam(name = "prioritate", targetNamespace = "")
        int prioritate,
        @WebParam(name = "volum", targetNamespace = "")
        float volum,
        @WebParam(name = "stare", targetNamespace = "")
        String stare);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prenumeClient", targetNamespace = "http://webPackage/", className = "client.PrenumeClient")
    @ResponseWrapper(localName = "prenumeClientResponse", targetNamespace = "http://webPackage/", className = "client.PrenumeClientResponse")
    @Action(input = "http://webPackage/ProiectWebService/prenumeClientRequest", output = "http://webPackage/ProiectWebService/prenumeClientResponse")
    public String prenumeClient(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "numeDestinatar", targetNamespace = "http://webPackage/", className = "client.NumeDestinatar")
    @ResponseWrapper(localName = "numeDestinatarResponse", targetNamespace = "http://webPackage/", className = "client.NumeDestinatarResponse")
    @Action(input = "http://webPackage/ProiectWebService/numeDestinatarRequest", output = "http://webPackage/ProiectWebService/numeDestinatarResponse")
    public String numeDestinatar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prenumeDestinatar", targetNamespace = "http://webPackage/", className = "client.PrenumeDestinatar")
    @ResponseWrapper(localName = "prenumeDestinatarResponse", targetNamespace = "http://webPackage/", className = "client.PrenumeDestinatarResponse")
    @Action(input = "http://webPackage/ProiectWebService/prenumeDestinatarRequest", output = "http://webPackage/ProiectWebService/prenumeDestinatarResponse")
    public String prenumeDestinatar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param prenume
     * @param nume
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectDestinatar", targetNamespace = "http://webPackage/", className = "client.SelectDestinatar")
    @ResponseWrapper(localName = "selectDestinatarResponse", targetNamespace = "http://webPackage/", className = "client.SelectDestinatarResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectDestinatarRequest", output = "http://webPackage/ProiectWebService/selectDestinatarResponse")
    public String selectDestinatar(
        @WebParam(name = "nume", targetNamespace = "")
        String nume,
        @WebParam(name = "prenume", targetNamespace = "")
        String prenume);

    /**
     * 
     * @param judetClient
     * @param stare
     * @param sessionNumeClient
     * @param blocClient
     * @param numarClient
     * @param scaraClient
     * @param stradaDestinatar
     * @param numeDestinatar
     * @param apartamentDestinatar
     * @param numeClient
     * @param prioritate
     * @param numarDestinatar
     * @param prenumeClient
     * @param orasDestinatar
     * @param judetDestinatar
     * @param scaraDestinatar
     * @param continut
     * @param sessionPrenumeClient
     * @param prenumeDestinatar
     * @param sessionNumeDestinatar
     * @param telefon
     * @param blocDestinatar
     * @param sessionPrenumeDestinatar
     * @param orasClient
     * @param sessionId
     * @param email
     * @param stradaClient
     * @param volum
     * @param apartamentClient
     */
    @WebMethod
    @RequestWrapper(localName = "updateComanda", targetNamespace = "http://webPackage/", className = "client.UpdateComanda")
    @ResponseWrapper(localName = "updateComandaResponse", targetNamespace = "http://webPackage/", className = "client.UpdateComandaResponse")
    @Action(input = "http://webPackage/ProiectWebService/updateComandaRequest", output = "http://webPackage/ProiectWebService/updateComandaResponse")
    public void updateComanda(
        @WebParam(name = "sessionNumeClient", targetNamespace = "")
        String sessionNumeClient,
        @WebParam(name = "sessionPrenumeClient", targetNamespace = "")
        String sessionPrenumeClient,
        @WebParam(name = "sessionNumeDestinatar", targetNamespace = "")
        String sessionNumeDestinatar,
        @WebParam(name = "sessionPrenumeDestinatar", targetNamespace = "")
        String sessionPrenumeDestinatar,
        @WebParam(name = "sessionId", targetNamespace = "")
        int sessionId,
        @WebParam(name = "numeClient", targetNamespace = "")
        String numeClient,
        @WebParam(name = "prenumeClient", targetNamespace = "")
        String prenumeClient,
        @WebParam(name = "stradaClient", targetNamespace = "")
        String stradaClient,
        @WebParam(name = "numarClient", targetNamespace = "")
        String numarClient,
        @WebParam(name = "blocClient", targetNamespace = "")
        String blocClient,
        @WebParam(name = "scaraClient", targetNamespace = "")
        String scaraClient,
        @WebParam(name = "apartamentClient", targetNamespace = "")
        String apartamentClient,
        @WebParam(name = "orasClient", targetNamespace = "")
        String orasClient,
        @WebParam(name = "judetClient", targetNamespace = "")
        String judetClient,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "telefon", targetNamespace = "")
        String telefon,
        @WebParam(name = "numeDestinatar", targetNamespace = "")
        String numeDestinatar,
        @WebParam(name = "prenumeDestinatar", targetNamespace = "")
        String prenumeDestinatar,
        @WebParam(name = "stradaDestinatar", targetNamespace = "")
        String stradaDestinatar,
        @WebParam(name = "numarDestinatar", targetNamespace = "")
        String numarDestinatar,
        @WebParam(name = "blocDestinatar", targetNamespace = "")
        String blocDestinatar,
        @WebParam(name = "scaraDestinatar", targetNamespace = "")
        String scaraDestinatar,
        @WebParam(name = "apartamentDestinatar", targetNamespace = "")
        String apartamentDestinatar,
        @WebParam(name = "orasDestinatar", targetNamespace = "")
        String orasDestinatar,
        @WebParam(name = "judetDestinatar", targetNamespace = "")
        String judetDestinatar,
        @WebParam(name = "continut", targetNamespace = "")
        String continut,
        @WebParam(name = "prioritate", targetNamespace = "")
        int prioritate,
        @WebParam(name = "volum", targetNamespace = "")
        float volum,
        @WebParam(name = "stare", targetNamespace = "")
        String stare);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectPackage", targetNamespace = "http://webPackage/", className = "client.SelectPackage")
    @ResponseWrapper(localName = "selectPackageResponse", targetNamespace = "http://webPackage/", className = "client.SelectPackageResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectPackageRequest", output = "http://webPackage/ProiectWebService/selectPackageResponse")
    public String selectPackage(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectCamioane", targetNamespace = "http://webPackage/", className = "client.SelectCamioane")
    @ResponseWrapper(localName = "selectCamioaneResponse", targetNamespace = "http://webPackage/", className = "client.SelectCamioaneResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectCamioaneRequest", output = "http://webPackage/ProiectWebService/selectCamioaneResponse")
    public String selectCamioane();

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "numeClient", targetNamespace = "http://webPackage/", className = "client.NumeClient")
    @ResponseWrapper(localName = "numeClientResponse", targetNamespace = "http://webPackage/", className = "client.NumeClientResponse")
    @Action(input = "http://webPackage/ProiectWebService/numeClientRequest", output = "http://webPackage/ProiectWebService/numeClientResponse")
    public String numeClient(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "continut", targetNamespace = "http://webPackage/", className = "client.Continut")
    @ResponseWrapper(localName = "continutResponse", targetNamespace = "http://webPackage/", className = "client.ContinutResponse")
    @Action(input = "http://webPackage/ProiectWebService/continutRequest", output = "http://webPackage/ProiectWebService/continutResponse")
    public String continut(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param judet
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "volum", targetNamespace = "http://webPackage/", className = "client.Volum")
    @ResponseWrapper(localName = "volumResponse", targetNamespace = "http://webPackage/", className = "client.VolumResponse")
    @Action(input = "http://webPackage/ProiectWebService/volumRequest", output = "http://webPackage/ProiectWebService/volumResponse")
    public float volum(
        @WebParam(name = "judet", targetNamespace = "")
        String judet);

    /**
     * 
     * @param judet
     * @param idcamion
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "destinatii", targetNamespace = "http://webPackage/", className = "client.Destinatii")
    @ResponseWrapper(localName = "destinatiiResponse", targetNamespace = "http://webPackage/", className = "client.DestinatiiResponse")
    @Action(input = "http://webPackage/ProiectWebService/destinatiiRequest", output = "http://webPackage/ProiectWebService/destinatiiResponse")
    public String destinatii(
        @WebParam(name = "idcamion", targetNamespace = "")
        String idcamion,
        @WebParam(name = "judet", targetNamespace = "")
        String judet);

    /**
     * 
     * @param tip
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectPack", targetNamespace = "http://webPackage/", className = "client.SelectPack")
    @ResponseWrapper(localName = "selectPackResponse", targetNamespace = "http://webPackage/", className = "client.SelectPackResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectPackRequest", output = "http://webPackage/ProiectWebService/selectPackResponse")
    public String selectPack(
        @WebParam(name = "tip", targetNamespace = "")
        String tip);

    /**
     * 
     * @param id
     * @param motiv
     */
    @WebMethod
    @RequestWrapper(localName = "rejected", targetNamespace = "http://webPackage/", className = "client.Rejected")
    @ResponseWrapper(localName = "rejectedResponse", targetNamespace = "http://webPackage/", className = "client.RejectedResponse")
    @Action(input = "http://webPackage/ProiectWebService/rejectedRequest", output = "http://webPackage/ProiectWebService/rejectedResponse")
    public void rejected(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "motiv", targetNamespace = "")
        String motiv);

    /**
     * 
     * @param id
     * @param stare
     */
    @WebMethod
    @RequestWrapper(localName = "stareColet", targetNamespace = "http://webPackage/", className = "client.StareColet")
    @ResponseWrapper(localName = "stareColetResponse", targetNamespace = "http://webPackage/", className = "client.StareColetResponse")
    @Action(input = "http://webPackage/ProiectWebService/stareColetRequest", output = "http://webPackage/ProiectWebService/stareColetResponse")
    public void stareColet(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "stare", targetNamespace = "")
        String stare);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "delivered", targetNamespace = "http://webPackage/", className = "client.Delivered")
    @ResponseWrapper(localName = "deliveredResponse", targetNamespace = "http://webPackage/", className = "client.DeliveredResponse")
    @Action(input = "http://webPackage/ProiectWebService/deliveredRequest", output = "http://webPackage/ProiectWebService/deliveredResponse")
    public void delivered(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param prenume
     * @param nume
     */
    @WebMethod
    @RequestWrapper(localName = "insertSofer", targetNamespace = "http://webPackage/", className = "client.InsertSofer")
    @ResponseWrapper(localName = "insertSoferResponse", targetNamespace = "http://webPackage/", className = "client.InsertSoferResponse")
    @Action(input = "http://webPackage/ProiectWebService/insertSoferRequest", output = "http://webPackage/ProiectWebService/insertSoferResponse")
    public void insertSofer(
        @WebParam(name = "nume", targetNamespace = "")
        String nume,
        @WebParam(name = "prenume", targetNamespace = "")
        String prenume);

    /**
     * 
     * @param prenume
     * @param stare
     * @param nume
     * @param numenou
     * @param starenoua
     * @param prenumenou
     */
    @WebMethod
    @RequestWrapper(localName = "modifySofer", targetNamespace = "http://webPackage/", className = "client.ModifySofer")
    @ResponseWrapper(localName = "modifySoferResponse", targetNamespace = "http://webPackage/", className = "client.ModifySoferResponse")
    @Action(input = "http://webPackage/ProiectWebService/modifySoferRequest", output = "http://webPackage/ProiectWebService/modifySoferResponse")
    public void modifySofer(
        @WebParam(name = "nume", targetNamespace = "")
        String nume,
        @WebParam(name = "prenume", targetNamespace = "")
        String prenume,
        @WebParam(name = "stare", targetNamespace = "")
        String stare,
        @WebParam(name = "numenou", targetNamespace = "")
        String numenou,
        @WebParam(name = "prenumenou", targetNamespace = "")
        String prenumenou,
        @WebParam(name = "starenoua", targetNamespace = "")
        String starenoua);

    /**
     * 
     * @param id
     * @param volum
     */
    @WebMethod
    @RequestWrapper(localName = "insertCamion", targetNamespace = "http://webPackage/", className = "client.InsertCamion")
    @ResponseWrapper(localName = "insertCamionResponse", targetNamespace = "http://webPackage/", className = "client.InsertCamionResponse")
    @Action(input = "http://webPackage/ProiectWebService/insertCamionRequest", output = "http://webPackage/ProiectWebService/insertCamionResponse")
    public void insertCamion(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "volum", targetNamespace = "")
        float volum);

    /**
     * 
     * @param prenume
     * @param nume
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSofer", targetNamespace = "http://webPackage/", className = "client.DeleteSofer")
    @ResponseWrapper(localName = "deleteSoferResponse", targetNamespace = "http://webPackage/", className = "client.DeleteSoferResponse")
    @Action(input = "http://webPackage/ProiectWebService/deleteSoferRequest", output = "http://webPackage/ProiectWebService/deleteSoferResponse")
    public void deleteSofer(
        @WebParam(name = "nume", targetNamespace = "")
        String nume,
        @WebParam(name = "prenume", targetNamespace = "")
        String prenume);

    /**
     * 
     * @param volumnou
     * @param id
     * @param starenoua
     * @param idnou
     */
    @WebMethod
    @RequestWrapper(localName = "modifyCamion", targetNamespace = "http://webPackage/", className = "client.ModifyCamion")
    @ResponseWrapper(localName = "modifyCamionResponse", targetNamespace = "http://webPackage/", className = "client.ModifyCamionResponse")
    @Action(input = "http://webPackage/ProiectWebService/modifyCamionRequest", output = "http://webPackage/ProiectWebService/modifyCamionResponse")
    public void modifyCamion(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "idnou", targetNamespace = "")
        String idnou,
        @WebParam(name = "volumnou", targetNamespace = "")
        Float volumnou,
        @WebParam(name = "starenoua", targetNamespace = "")
        String starenoua);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "deleteCamion", targetNamespace = "http://webPackage/", className = "client.DeleteCamion")
    @ResponseWrapper(localName = "deleteCamionResponse", targetNamespace = "http://webPackage/", className = "client.DeleteCamionResponse")
    @Action(input = "http://webPackage/ProiectWebService/deleteCamionRequest", output = "http://webPackage/ProiectWebService/deleteCamionResponse")
    public void deleteCamion(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "suma", targetNamespace = "http://webPackage/", className = "client.Suma")
    @ResponseWrapper(localName = "sumaResponse", targetNamespace = "http://webPackage/", className = "client.SumaResponse")
    @Action(input = "http://webPackage/ProiectWebService/sumaRequest", output = "http://webPackage/ProiectWebService/sumaResponse")
    public Float suma(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "idComanda", targetNamespace = "http://webPackage/", className = "client.IdComanda")
    @ResponseWrapper(localName = "idComandaResponse", targetNamespace = "http://webPackage/", className = "client.IdComandaResponse")
    @Action(input = "http://webPackage/ProiectWebService/idComandaRequest", output = "http://webPackage/ProiectWebService/idComandaResponse")
    public int idComanda(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStare", targetNamespace = "http://webPackage/", className = "client.GetStare")
    @ResponseWrapper(localName = "getStareResponse", targetNamespace = "http://webPackage/", className = "client.GetStareResponse")
    @Action(input = "http://webPackage/ProiectWebService/getStareRequest", output = "http://webPackage/ProiectWebService/getStareResponse")
    public String getStare(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param prenume
     * @param nume
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectClient", targetNamespace = "http://webPackage/", className = "client.SelectClient")
    @ResponseWrapper(localName = "selectClientResponse", targetNamespace = "http://webPackage/", className = "client.SelectClientResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectClientRequest", output = "http://webPackage/ProiectWebService/selectClientResponse")
    public String selectClient(
        @WebParam(name = "nume", targetNamespace = "")
        String nume,
        @WebParam(name = "prenume", targetNamespace = "")
        String prenume);

    /**
     * 
     * @param tip
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectSoferi", targetNamespace = "http://webPackage/", className = "client.SelectSoferi")
    @ResponseWrapper(localName = "selectSoferiResponse", targetNamespace = "http://webPackage/", className = "client.SelectSoferiResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectSoferiRequest", output = "http://webPackage/ProiectWebService/selectSoferiResponse")
    public String selectSoferi(
        @WebParam(name = "tip", targetNamespace = "")
        String tip);

    /**
     * 
     * @param judet
     * @param idcamion
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traseu", targetNamespace = "http://webPackage/", className = "client.Traseu")
    @ResponseWrapper(localName = "traseuResponse", targetNamespace = "http://webPackage/", className = "client.TraseuResponse")
    @Action(input = "http://webPackage/ProiectWebService/traseuRequest", output = "http://webPackage/ProiectWebService/traseuResponse")
    public String traseu(
        @WebParam(name = "idcamion", targetNamespace = "")
        String idcamion,
        @WebParam(name = "judet", targetNamespace = "")
        String judet);

    /**
     * 
     * @param tip
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectCamion", targetNamespace = "http://webPackage/", className = "client.SelectCamion")
    @ResponseWrapper(localName = "selectCamionResponse", targetNamespace = "http://webPackage/", className = "client.SelectCamionResponse")
    @Action(input = "http://webPackage/ProiectWebService/selectCamionRequest", output = "http://webPackage/ProiectWebService/selectCamionResponse")
    public String selectCamion(
        @WebParam(name = "tip", targetNamespace = "")
        String tip);

    /**
     * 
     * @param judet
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lista", targetNamespace = "http://webPackage/", className = "client.Lista")
    @ResponseWrapper(localName = "listaResponse", targetNamespace = "http://webPackage/", className = "client.ListaResponse")
    @Action(input = "http://webPackage/ProiectWebService/listaRequest", output = "http://webPackage/ProiectWebService/listaResponse")
    public String lista(
        @WebParam(name = "judet", targetNamespace = "")
        String judet);

}
